---
title: "R-project-patent"
format:
  html: 
    code-fold: true
  pdf: default
editor: 
  markdown: 
    wrap: 72
---

GitHub Repository <https://github.com/brl-noe/R-project-patent.git>

#  I- Research question presentation

  In early September, Mario Draghi revealed his plan to make the European
Union more competitive. A key part of his plan is to invest billions in
innovation. Patent applications serve as a proxy for innovation. A
patent is an exclusive right granted for an invention, while a patent
application refers to the legal and administrative process of requesting
the issuance of a patent. This includes the content of the invention's
description and claims, along with the procedural paperwork involved.
Therefore, it seems relevant to explore what factors influence the
phenomenon of patent applications across European Union countries. Our
research question is: **What factors influence patent applications
across European Union countries? A longitudinal analysis of education,
innovation dynamics, and socioeconomic indicators.**

This study focuses on the role of education, innovation-related factors,
and socioeconomic variables in explaining differences in patent activity
across EU countries. We aim to determine whether higher educational
attainment correlates with more patents and how economic factors, such
as GDP, income inequality, and unemployment, influence this
relationship.

Moreover, our study will employ a longitudinal analysis, allowing us to
examine trends in patent applications and the evolution of the
relationship between patent activity, education, and socioeconomic
factors across European Union countries over time.We hypothesize that
higher economic development is positively correlated with higher
educational attainment and, in turn, with increased patent applications.
In 2023, countries with the highest number of patent applications were
also among the largest global economies (e.g., China ranked 1st, and the
USA ranked 2nd), suggesting a link between economic strength and
innovation output. This pattern implies that economic resources may
facilitate investments in education and research, which are crucial
drivers of technological advancement. Moreover, a World Bank article
published in 2023 stated: *"Today, there is agreement that education,
independent of innate ability, helps spur innovation and technology, and
it contributes to productivity and economic growth."* This further
supports the idea that education plays a critical role in fostering
innovation, reinforcing the need to investigate whether a similar
relationship exists within European Union countries.

Our findings could help European policymakers allocate resources more
effectively, ensuring that the billions of euros invested in innovation
contribute to the European Union's goal of remaining globally
competitive. For instance, if we find that higher educational attainment
correlates with higher patent applications, we would recommend that
policymakers prioritize investments in education. This would potentially
be more impactful and cost-effective than investing in other areas of
the R&D process, such as infrastructure.

# II- Data sets descriptions
 
  For our analysis, we will use tree different datasets all coming from
the Eurostat public database:
Population by Educational Attainment Level, Sex, and Age:
<https://ec.europa.eu/eurostat/web/products-datasets/-/edat_lfse_03>
Patent Applications to the European Patent Office by Applicants' /
Inventors' Country of Residence:
<https://ec.europa.eu/eurostat/web/products-datasets/-/sdg_09_40> Key
Indicators - Annual Data:
<https://ec.europa.eu/eurostat/web/products-datasets/-/nasa_10_ki>

The common key indicator of the 3 datasets is `geo` that refers to the name of the country. This variable will be useful to associate datasets with each other. Another common variable to the 3 datasets is `unit` (percentage or a row value of the observed variable).

Then, the first dataset called patent has as observed value the number
of requests for patent protection of an invention filed with the
European Patent Office (EPO) regardless of whether they are granted or
not. Here, we see a limit in our analysis coming from the last fact.
Indeed, later on the analysis, we will proxy the level of innovation in
a country based on this observed value of application for patent however
we don't actually know if the patent is granted or not, we mainly know
which country (`geo`) applied for how many a patent each year.

The second dataset called education contains mainly contains the
variable `isced11`. `isced11` is an indication of the the educational
attainment level of an individual with each individual being in between
15 and 64 years old (variable `age`). The educational attainment level
corresponds to the highest ISCED (International Standard Classification
of Education) level successfully completed, the successful completion of
an education programme being validated by a recognised qualification, in
other word a qualification officially recognised by the relevant
national education authorities or recognised as equivalent to another
qualification of formal education. The ISCED for 2011 are as following:

Level 0 – Less than primary education Level 1 – Primary education Level
2 – Lower secondary education Level 3 – Upper secondary education Level
4 – Post-secondary non-tertiary education Level 5 – Short-cycle tertiary
education Level 6 – Bachelor’s or equivalent level Level 7 – Master’s or
equivalent level Level 8 – Doctoral or equivalent level

The third dataset called key_indicator encompass non-financial accounts
that provide a description of the different stages of the economic
process (variable `na_item`): production, generation of income,
distribution of income, redistribution of income, use of income and
non-financial accumulation. These stages are estimated in percentage for
different sectors and agents of the economy of the country.

## Basics informations about the databases

```{r}
## Loading the library
#| message: false
#| echo: false
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
theme_set(theme_bw())
```

```{r}
## Loading the data
#| message: false
#| echo: false
here::i_am("R-project-patent.Rproj")
```

```{r}
#| message: false
#| echo: false
## Loading patent data
patent <- vroom(here("patent.tsv"))

## Loading key indicator data
key_indicator <- vroom(here("key_indicator.tsv"))

## Loading education data
education <- vroom(here("education.tsv"))
```

|                   | Patent           |
|-------------------|------------------|
| Number of rows    | `r NROW(patent)` |
| Number of columns | `r NCOL(patent)` |

|                   | Key Indicator           |
|-------------------|-------------------------|
| Number of rows    | `r NROW(key_indicator)` |
| Number of columns | `r NCOL(key_indicator)` |

|                   | Education           |
|-------------------|---------------------|
| Number of rows    | `r NROW(education)` |
| Number of columns | `r NCOL(education)` |


# III- Data analysis

## Description of the data joining, cleaning, etc.

```{r}
#| echo: false
education <- education %>%
  separate(col = "freq,sex,age,unit,isced11,geo\\TIME_PERIOD", 
           into = c("freq", "sex", "age", "unit", "isced11", "geo"),
           sep = ",")

patent <- patent %>%
  separate(col = "freq,coop_ptn,unit,geo\\TIME_PERIOD", 
           into = c("freq", "coop_ptn", "unit", "geo"),
           sep = ",")

key_indicator <- key_indicator %>%
  separate(col = "freq,unit,na_item,sector,geo\\TIME_PERIOD", 
           into = c("freq", "unit", "na_item", "sector", "geo"),
           sep = ",")

## We used `separate()` that allows us to split a single column into multiple columns based on a separator.
```

```{r}
#| echo: false
# Join the datasets
combined_data <- education %>% 
  left_join(key_indicator, by = "geo", relationship = "many-to-many")

combined_data <- combined_data %>%
  left_join(patent, by = "geo", relationship = "many-to-many")

## The `left_join()` function from the `dplyr` package will perform a left join between the datasets, using the "geo" column as the common key. This will ensure that all rows from the education dataset are included, with the corresponding data from the other two datasets.
```


```{r}
#| echo: false
combined_data <- combined_data %>%
  rename(
    country = geo,
    educational_attainment = isced11
  )

## We rename the variables to be more understandable.
```


```{r}
#| echo: false
combined_data <- combined_data %>%
  select(-ends_with(".y"))  # Remove all `.y` columns

## In the combined dataset we have variables with .x and .y that means we have duplicates. We use the code above to delete the duplicates.
```

```{r}
#| echo: false
# Handle missing and special values
combined_data <- combined_data %>%
  mutate(across(matches("^\\d{4}"), ~ {
    . <- ifelse(. == "u", NA, .)            # Replace 'u' with NA
    . <- str_remove(., "[bx]$")            # Remove 'b' and 'x' suffixes
    as.numeric(.)                          # Convert to numeric
  }))
```


```{r}
# Remove duplicate rows
combined_data <- combined_data %>%
  distinct()
```

```{r}
key_indicator |>
distinct(sector)
```
We observe 6 different sectors in our data set that we can label. 

```{r}
# Recode sector values
combined_data <- combined_data %>%
  mutate(sector = case_when(
    sector == "S1" ~ "Total economy",
    sector == "S11" ~ "Non-financial corporations",
    sector == "S11_S12" ~ "Non-financial/financial corporate sectors",
    sector == "S13" ~ "general government",
    sector == "S14" ~ "Households",
    sector == "S14_S15" ~ "Households and NPISHs",
    TRUE ~ sector
  ))
```

For clarity purpose, we label each level of education attainment in the dataset with their respective signification 

```{r}
combined_data |>
distinct(educational_attainment)
```

We observe the 6 different level of education attainment in our dataset


```{r}
# Recode sector values
combined_data <- combined_data %>%
  mutate(educational_attainment = case_when(
    educational_attainment == "ED0-2" ~ "Lower secondary education",
    educational_attainment == "ED3_4" ~ "Upper secondary education and Doctoral or equivalent level",
    educational_attainment == "ED3_4" ~ "Upper secondary education or Post-secondary non-tertiary education",
    educational_attainment == "ED3_4GEN" ~ "Upper secondary education or Post-secondary non-tertiary education (general)",
    educational_attainment == "ED3_4VOC" ~ "Upper secondary education or Post-secondary non-tertiary education (vocational)",
    educational_attainment == "ED5-8" ~ "Between Short-cycle tertiary education and Doctoral or equivalent level",
    TRUE ~ educational_attainment
  ))
```

As well, for clarity purpose, we label each level of education attainment in the dataset with their respective signification 

```{r}
# Create identifier from na_item
combined_data <- combined_data %>%
  mutate(indicator_type = str_extract(na_item, "^[^_]+"))
```


### Introduction by a study of a key variable

## Additonal data cleaning 

```{r}
patent |> summarise(across(starts_with("20"), class))
```
Here we find a problem in the patent dataset. Indeed, some Years have values in
numeric format whereas some others are in the characters format 

```{r}
patent <- patent |>
  mutate(across(starts_with("20"), ~ as.numeric(as.character(.))))  
```
Mutate() will let us modify existing columns starting with "20" and the function
across() will spread to all the functions staring with "20" the change from
numeric values to characters. 


We first create a column with all the years in it and each country's
values for every year:
```{r}
patent_long <- patent |>
  pivot_longer(cols = starts_with("20"), names_to = "Years", values_to = "Value")
print(patent_long)
```


```{r}
patent_summary <- patent_long |>
  filter(geo != "EU27_2020") |>
  group_by(Years) |>
    filter(!is.na(Value)) |>
    mutate(total_value = sum(Value))
print(patent_summary)
```

Here we add an additional filter to remove the mean of patent in every country
in the euro zone (EU27_2020). We need to do that because otherwise some 
countries in Europe will be counted two times (counted for themselves and inside
the aggregate EU27_2020). 

```{r}
patent_summary |>
ggplot(aes(x=Years, y=total_value)) +
  geom_point()
```

We see a global trend of increasing the total number of patent each year in 
the european countries. 

```{r}
patent_EU27 <- patent_long |>
  filter(geo == "EU27_2020") |>
  group_by(Years) |>
    filter(!is.na(Value)) |>
    mutate(total_value = sum(Value))
print(patent_EU27)
```


```{r}
patent_EU27 |>
 ggplot(aes(x=Years, y=total_value)) +
  geom_point() 
```

Similarely as before, if we only consider the 27 countries of the euro zone,
we notice the same trend in the global number of patent. 











# IV- conclusion