---
title: "R-project-patent"
format:
  html: 
    code-fold: true
  pdf: default
editor: 
  markdown: 
    wrap: 72
---

GitHub Repository <https://github.com/brl-noe/R-project-patent.git>

# I- Research question presentation

In early September, Mario Draghi revealed his plan to make the European
Union more competitive. A key part of his plan is to invest billions in
innovation. Patent applications serve as a proxy for innovation. A
patent is an exclusive right granted for an invention, while a patent
application refers to the legal and administrative process of requesting
the issuance of a patent. This includes the content of the invention's
description and claims, along with the procedural paperwork involved.
Therefore, it seems relevant to explore what factors influence the
phenomenon of patent applications across European Union countries. Our
research question is: **What factors influence patent applications
across European Union countries? A longitudinal analysis of education,
innovation dynamics, and socioeconomic indicators.**

This study focuses on the role of education, innovation-related factors,
and socioeconomic variables in explaining differences in patent activity
across EU countries. We aim to determine whether higher educational
attainment correlates with more patents and how economic factors, such
as GDP, income inequality, and unemployment, influence this
relationship.

Moreover, our study will employ a longitudinal analysis, allowing us to
examine trends in patent applications and the evolution of the
relationship between patent activity, education, and socioeconomic
factors across European Union countries over time.We hypothesize that
higher economic development is positively correlated with higher
educational attainment and, in turn, with increased patent applications.
In 2023, countries with the highest number of patent applications were
also among the largest global economies (e.g., China ranked 1st, and the
USA ranked 2nd), suggesting a link between economic strength and
innovation output. This pattern implies that economic resources may
facilitate investments in education and research, which are crucial
drivers of technological advancement. Moreover, a World Bank article
published in 2023 stated: *"Today, there is agreement that education,
independent of innate ability, helps spur innovation and technology, and
it contributes to productivity and economic growth."* This further
supports the idea that education plays a critical role in fostering
innovation, reinforcing the need to investigate whether a similar
relationship exists within European Union countries.

Our findings could help European policymakers allocate resources more
effectively, ensuring that the billions of euros invested in innovation
contribute to the European Union's goal of remaining globally
competitive. For instance, if we find that higher educational attainment
correlates with higher patent applications, we would recommend that
policymakers prioritize investments in education. This would potentially
be more impactful and cost-effective than investing in other areas of
the R&D process, such as infrastructure.

# II- Data sets descriptions

For our analysis, we will use tree different datasets all coming from
the Eurostat public database: Population by Educational Attainment
Level, Sex, and Age:
<https://ec.europa.eu/eurostat/web/products-datasets/-/edat_lfse_03>
Patent Applications to the European Patent Office by Applicants' /
Inventors' Country of Residence:
<https://ec.europa.eu/eurostat/web/products-datasets/-/sdg_09_40> Key
Indicators - Annual Data:
<https://ec.europa.eu/eurostat/web/products-datasets/-/nasa_10_ki>

The common key indicator of the 3 datasets is `geo` that refers to the
name of the country. This variable will be useful to associate datasets
with each other. Another common variable to the 3 datasets is `unit`
(percentage or a row value of the observed variable).

Then, the first dataset called patent has as observed value the number
of requests for patent protection of an invention filed with the
European Patent Office (EPO) regardless of whether they are granted or
not. Here, we see a limit in our analysis coming from the last fact.
Indeed, later on the analysis, we will proxy the level of innovation in
a country based on this observed value of application for patent however
we don't actually know if the patent is granted or not, we mainly know
which country (`geo`) applied for how many a patent each year.

The second dataset called education contains mainly contains the
variable `isced11`. `isced11` is an indication of the the educational
attainment level of an individual with each individual being in between
15 and 64 years old (variable `age`). The educational attainment level
corresponds to the highest ISCED (International Standard Classification
of Education) level successfully completed, the successful completion of
an education programme being validated by a recognised qualification, in
other word a qualification officially recognised by the relevant
national education authorities or recognised as equivalent to another
qualification of formal education. The ISCED for 2011 are as following:

Level 0 – Less than primary education Level 1 – Primary education Level
2 – Lower secondary education Level 3 – Upper secondary education Level
4 – Post-secondary non-tertiary education Level 5 – Short-cycle tertiary
education Level 6 – Bachelor’s or equivalent level Level 7 – Master’s or
equivalent level Level 8 – Doctoral or equivalent level

The third dataset called key_indicator encompass non-financial accounts
that provide a description of the different stages of the economic
process (variable `na_item`): production, generation of income,
distribution of income, redistribution of income, use of income and
non-financial accumulation. These stages are estimated in percentage for
different sectors and agents of the economy of the country.

## Basics informations about the databases

```{r}
## Loading the library
#| message: false
#| echo: false
library(conflicted)
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(tidyverse)
library(plm)
library(AER)
library(sandwich)
theme_set(theme_bw())
conflicted::conflict_prefer("filter", "dplyr")
```

```{r}
## Loading the data
#| message: false
#| echo: false
here::i_am("R-project-patent.Rproj")
```

```{r}
#| message: false
#| echo: false
## Loading patent data
patent <- vroom(here("patent.tsv"))

## Loading key indicator data
key_indicator <- vroom(here("key_indicator.tsv"))

## Loading education data
education <- vroom(here("education.tsv"))
```

|                   | Patent           |
|-------------------|------------------|
| Number of rows    | `r NROW(patent)` |
| Number of columns | `r NCOL(patent)` |

|                   | Key Indicator           |
|-------------------|-------------------------|
| Number of rows    | `r NROW(key_indicator)` |
| Number of columns | `r NCOL(key_indicator)` |

|                   | Education           |
|-------------------|---------------------|
| Number of rows    | `r NROW(education)` |
| Number of columns | `r NCOL(education)` |

# III- Data analysis

```{r}
# Data cleaning steps
# 1. Separate columns
#| message: false
#| echo: false
education <- education %>%
  separate(col = "freq,sex,age,unit,isced11,geo\\TIME_PERIOD", 
           into = c("freq", "sex", "age", "unit", "isced11", "geo"),
           sep = ",")
patent <- patent %>%
  separate(col = "freq,coop_ptn,unit,geo\\TIME_PERIOD", 
           into = c("freq", "coop_ptn", "unit", "geo"),
           sep = ",")
key_indicator <- key_indicator %>%
  separate(col = "freq,unit,na_item,sector,geo\\TIME_PERIOD", 
           into = c("freq", "unit", "na_item", "sector", "geo"),
           sep = ",")
```

### Description of the data joining, cleaning, etc. for patent

```{r}
#| message: false
#| echo: false
patent |> summarise(across(starts_with("20"), class))
```

Here we find a problem in the patent dataset. Indeed, some Years have
values in numeric format whereas some others are in the characters
format

```{r}
#| message: false
#| echo: false
patent <- patent |>
  mutate(across(starts_with("20"), ~ as.numeric(as.character(.))))  
```

Mutate() will let us modify existing columns starting with "20" and the
function across() will spread to all the functions staring with "20" the
change from numeric values to characters.

We first create a column with all the years in it and each country's
values for every year:

```{r}
#| message: false
#| echo: false
patent_long <- patent |>
  pivot_longer(cols = starts_with("20"), names_to = "Years", values_to = "Value")
print(patent_long)
```

```{r}
#| message: false
#| echo: false
patent_summary <- patent_long |>
  filter(geo != "EU27_2020") |>
  group_by(Years) |>
    filter(!is.na(Value)) |>
    mutate(total_value = sum(Value))
print(patent_summary)
```

Here we add an additional filter to remove the mean of patent in every
country in the euro zone (EU27_2020). We need to do that because
otherwise some countries in Europe will be counted two times (counted
for themselves and inside the aggregate EU27_2020).

```{r}
#| message: false
#| echo: false
patent_summary |>
ggplot(aes(x=Years, y=total_value)) +
  geom_point()
```

We see a global trend of increasing the total number of patent each year
in the european countries.

```{r}
#| message: false
#| echo: false
patent_EU27 <- patent_long |>
  filter(geo == "EU27_2020") |>
  group_by(Years) |>
    filter(!is.na(Value)) |>
    mutate(total_value = sum(Value))
print(patent_EU27)
```

```{r}
#| message: false
#| echo: false
patent_EU27 |>
 ggplot(aes(x=Years, y=total_value)) +
  geom_point() 
```

Similarely as before, if we only consider the 27 countries of the euro
zone, we notice the same trend in the global number of patent.

### Description of the data joining, cleaning, etc. for key indicator

```{r}
#| message: false
#| echo: false
key_indicator |>
   summarise(across(matches("^20|^19"), class))
```

We observe again that many of the columns contains characters that we
have to convert to numeric values.

```{r}
#| message: false
#| echo: false
key_indicator2 <- key_indicator |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) |> 
  print(key_indicator2)
```

Here we have a big problem because each sector has its own na_item that
correspond to the method of calculation. In other words, in each
countries the method to evaluate the percentage of each sector in the
economy of the country is different. This fact limits the rigor of the
approach for any analysis based  on sectors.

```{r}
#| message: false
#| echo: false
key_indicator2 |>
  filter(geo == "FR") |>
  ggplot(aes())
```


```{r}
#| message: false
#| echo: false
key_long <- key_indicator |>
  pivot_longer(cols = starts_with("20"), names_to = "Years", values_to = "Value")
print(key_long)
```


```{r}
#| message: false
#| echo: false
key_long |>
  filter(geo == "FR") |>
  filter(sector == "S11") |>
  ggplot(aes(x = Years, y= Value, fill= sector)) +
  geom_bar()
```

### Description of the data joining, cleaning,ect. for education

```{r}
#| message: false
#| echo: false
education |>
   summarise(across(matches("^20|^19"), class))
```

```{r}
#| message: false
#| echo: false
education2 <- education |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) |> 
  print(education2)
```

```{r}
#| message: false
#| echo: false
education_long <- education |>
  pivot_longer(cols = starts_with("20"), names_to = "Years", values_to = "Value")
print(education_long)
```

# Patent and education application

```{r}
#| message: false
#| echo: false
prepare_data <- function(education_long, patent_long, start_year = 2012, end_year = 2022) {
  # Clean education data
  clean_education <- education_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years),
           # Map `isced11` to educational attainment levels
           educational_attainment = case_when(
             isced11 == "ED0-2" ~ "Lower secondary education",
             isced11 == "ED3_4" ~ "Upper secondary education and Doctoral",
             isced11 == "ED3_4GEN" ~ "Upper secondary (general)",
             isced11 == "ED3_4VOC" ~ "Upper secondary (vocational)",
             isced11 == "ED5-8" ~ "Tertiary to Doctoral",
             TRUE ~ NA_character_  # Assign NA for unexpected values
           )) %>%
    # Filter years to reduce data volume
    filter(year >= start_year, year <= end_year) %>%
    # Remove rows with NA in key variables
    filter(!is.na(educational_attainment), !is.na(geo)) %>%
    # Optional: aggregate data (count or percentage representation)
    group_by(geo, year, educational_attainment) %>%
    summarize(educational_attainment_count = n(), .groups = "drop")

  # Clean patent data
  clean_patent <- patent_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years)) %>%
    filter(year >= start_year, year <= end_year) %>%
    filter(!is.na(Value), !is.na(geo)) %>%
    group_by(geo, year) %>%
    summarize(patents = sum(Value, na.rm = TRUE), .groups = "drop")

  # Merge datasets
  merged_data <- inner_join(clean_education, clean_patent, by = c("geo", "year"))
  return(merged_data)
}
```

```{r}
#| message: false
#| echo: false
# Ensure merged_data is created by running the function
merged_data <- prepare_data(education_long, patent_long)
```

```{r}
#| message: false
#| echo: false
filtered_data <- merged_data %>%
  filter(geo %in% c("FR", "DE", "IT"))  # Replace with desired country codes

plot_education_patents <- ggplot(filtered_data, 
         aes(x = year, 
             y = patents, 
             color = educational_attainment, 
             group = interaction(geo, educational_attainment))) +
    geom_line(size = 1, alpha = 0.7) +
    facet_wrap(~ geo, scales = "free_y") +
    scale_color_viridis_d(name = "Education Level") +
    theme_minimal() +
    labs(x = "Year",
         y = "Number of Patents",
         title = "Patent Activity by Education Level and Country") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          strip.text = element_text(size = 10))
print(plot_education_patents)
```

```{r}
#| message: false
#| echo: false
filtered_data <- merged_data %>%
  filter(year == 2022, geo %in% c("FR", "DE", "IT", "EU27_2020"))

plot_education_patents2 <- ggplot(filtered_data, 
         aes(x = geo, 
             y = patents, 
             fill = educational_attainment)) +
    geom_bar(stat = "identity", position = "dodge") +
    scale_fill_viridis_d(name = "Education Level") +
    theme_minimal() +
    labs(x = "Country",
         y = "Number of Patents",
         title = "Patent Activity by Education Level and Country (2022)") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          axis.text.x = element_text(angle = 45, hjust = 1))
print(plot_education_patents2)
```

# Patent and key indicator application

```{r}
#| message: false
#| echo: false
prepare_data2 <- function(key_long, patent_long, start_year = 2012, end_year = 2022) {
  # Clean education data
  clean_key <- key_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years),
           # Map `sector` to their respective labels
           sector = case_when(
             sector == "S1" ~ "Total economy",
             sector == "S11" ~ "Non-financial corporations",
             sector == "S11_S12" ~ "Non-financial/financial corporate sectors",
             sector == "S13" ~ "general government",
             sector == "S14" ~ "Households",
             sector == "S14_S15" ~ "Households and NPISHs",
             TRUE ~ NA_character_  # Assign NA for unexpected values
           )) %>%
    # Filter years to reduce data volume
    filter(year >= start_year, year <= end_year) %>%
    # Remove rows with NA in key variables
    filter(!is.na(sector), !is.na(geo))

  # Clean patent data
  clean_patent <- patent_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years),
           # Ensure `Value` is numeric
           Value = as.numeric(Value)) %>%
    # Filter valid years and remove rows with missing data
    filter(year >= start_year, year <= end_year) %>%
    filter(!is.na(Value), !is.na(geo)) %>%
    # Group and summarize patent data
    group_by(geo, year) %>%
    summarize(patents = sum(Value, na.rm = TRUE), .groups = "drop")

  # Merge datasets
  merged_data2 <- inner_join(clean_key, clean_patent, by = c("geo", "year"))
  
  return(merged_data2)
}
```

```{r}
#| message: false
#| echo: false
# Ensure merged_data is created by running the function
merged_data2 <- prepare_data2(key_long, patent_long)
```

```{r}
#| message: false
#| echo: false
filtered_data2 <- merged_data2 %>%
  filter(geo %in% c("FR", "DE", "IT"))  # Replace with desired country codes

plot_key_patents <- ggplot(filtered_data2, 
         aes(x = year, 
             y = patents, 
             color = sector, 
             group = interaction(geo, sector))) +
    geom_line(size = 1, alpha = 0.7) +
    facet_wrap(~ geo, scales = "free_y") +
    scale_color_viridis_d(name = "Sector") +
    theme_minimal() +
    labs(x = "Year",
         y = "Number of Patents",
         title = "Patent Activity by Sector and Country") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          strip.text = element_text(size = 10))
print(plot_key_patents)
```

```{r}
#| message: false
#| echo: false
filtered_data3 <- merged_data2 %>%
  filter(year == 2022, geo %in% c("FR", "DE", "IT", "EU27_2020"))

plot_key_patents3 <- ggplot(filtered_data3, 
         aes(x = geo, 
             y = patents, 
             fill = sector)) +
    geom_bar(stat = "identity", position = "dodge") +
    scale_fill_viridis_d(name = "Education Level") +
    theme_minimal() +
    labs(x = "Country",
         y = "Number of Patents",
         title = "Patent Activity by Sector and Country (2022)") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          axis.text.x = element_text(angle = 45, hjust = 1))
print(plot_key_patents3)
```

## Description of the data joining, cleaning, etc. for combined data

```{r}
#| message: false
#| echo: false
combined_data <- merged_data %>%
  full_join(merged_data2, by = c("geo", "year"), relationship = "many-to-many") %>%
  dplyr::select(-patents.y)  # Ensure the correct select function is used
```

```{r}
#| message: false
#| echo: false
# 3. Clean and prepare data
combined_data <- combined_data %>%
  rename(
    country = geo
)
```

## Regression

### Panel regression & panel regression with lagged effect

We wanted to do a panel data analysis but there's a huge issue with duplicates we weren't able to fixed. I put the code with #.  
```{r}
#| message: false
#| echo: false
# First, let's check for duplicates
duplicates_check <- combined_data %>%
  group_by(country, year) %>%
  summarise(
    count = n(),
    .groups = 'drop'
  ) %>%
  filter(count > 1)

print("Checking for duplicate country-year combinations:")
print(duplicates_check)
```

```{r}
#| message: false
#| echo: false
# Basic panel model
#panel_model <- plm(patents.x ~ educational_attainment + sector,data = panel_data,index = c("country", "year"),model = "within",effect = "twoways")
```

### Easier regression 

```{r}
#| message: false
#| echo: false
# Prepare data - no need to handle duplicates
model_data <- combined_data %>%
  mutate(
    year = as.factor(year),         # Convert year to factor for fixed effects
    country = as.factor(country),   # Convert country to factor
    educational_attainment = as.factor(educational_attainment),
    sector = as.factor(sector)
  )
```


```{r}
#| message: false
#| echo: false
# Run fixed effects regression
# This includes country and year fixed effects
fe_model <- lm(patents.x ~ educational_attainment + sector + 
               country + year,  # Country and year fixed effects
               data = model_data)
```


```{r}
#| message: false
#| echo: false
# Get robust standard errors clustered by country
robust_se <- coeftest(fe_model, 
                     vcov = vcovCL, 
                     cluster = model_data$country)
# Create diagnostic plots
# 1. Residuals vs Fitted
ggplot(data.frame(fitted = fitted(fe_model), 
                 residuals = residuals(fe_model)), 
       aes(x = fitted, y = residuals)) +
  geom_point(alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  theme_minimal() +
  labs(title = "Residuals vs Fitted Values",
       x = "Fitted Values",
       y = "Residuals")
```

In the graph above, the x-axis shows the fitted (predicted) values from the regression model, the y-axis shows the residuals (the differences between observed and predicted values) and the red dashed line represents zero on the residuals scale.
We observe that most residuals are clustered around the zero line for lower fitted values (left side), which is good. However, there appears to be increasing spread and some extreme residuals as the fitted values increase (right side).
Moreover, there's evidence of heteroscedasticity (non-constant variance) since the spread of residuals isn't consistent across fitted values. The spread appears to increase with larger fitted values.
The pattern suggests that the model might be: - Performing better for smaller values, - Less reliable for larger values, - Potentially missing some important non-linear relationships

```{r}
#| message: false
#| echo: false
# 2. Average patents by country over time
avg_by_country_year <- model_data %>%
  group_by(country, year) %>%
  summarise(
    avg_patents = mean(patents.x),
    .groups = 'drop'
  )

ggplot(avg_by_country_year, aes(x = year, y = avg_patents, color = country)) +
  geom_line(group = 1) +
  theme_minimal() +
  labs(title = "Average Patents by Country Over Time",
       x = "Year",
       y = "Average Patents")
```


```{r}
#| message: false
#| echo: false
# Print results
print("Fixed Effects Regression Results:")
print(summary(fe_model))
print("\nRobust Standard Errors (Clustered by Country):")
print(robust_se)
```

Surprisingly, we observe that educational attainment levels show minimal and statistically insignificant effects on patent applications. For example:
  Tertiary to Doctoral Education
  Coefficient: 8.670e-11 (extremely small positive effect)
  Marginal significance (p = 0.071)
  This suggests that for each percentage point increase in the population with tertiary to doctoral        education, there is virtually no measurable impact on patent applications
This unexpected result suggests that the relationship between education and patents might be more complex than directly measurable, possibly operating through other channels or requiring different measurement approaches. Indeed there 3 possible things that can explain this result: 
  1) Scale Issue: The variables might need rescaling (e.g., education in percentages while patents in absolute numbers)
  2) Model Specification: The relationship might be non-linear or requiring interaction terms
  3) Data Structure: The strong country fixed effects might be absorbing most of the education-related variance
  
In fact, There are substantial and highly significant differences between countries in patent applications:
Leading innovators: Germany (+48,064), France (+16,096), Switzerland (+9,169), Netherlands (+8,387)
Lower patent activity: Many Eastern European countries show significantly negative coefficients, indicating structural differences in innovation systems
These large country effects suggest that national innovation systems, institutional quality, and industrial base may be more important than educational metrics alone.

Furthermore, we observe clear upward trend in patent applications over time:
  Significant positive year effects from 2017-2022
  Strongest effects in recent years (2021: +1,027, 2022: +993)
  This suggests improving innovation capacity across Europe over time

Finally, there's a sector effect, we observe significant differences across sectors:
Non-financial corporations show significant negative effects while Household sector shows significant positive effects
This indicates the importance of considering institutional structures in innovation.


```{r}
#| message: false
#| echo: false
# Calculate R-squared
r2 <- summary(fe_model)$r.squared
adj_r2 <- summary(fe_model)$adj.r.squared

print("\nModel Fit Statistics:")
print(paste("R-squared:", round(r2, 3)))
print(paste("Adjusted R-squared:", round(adj_r2, 3)))
```

We have a R-squared: 0.998 which mean that 99.8% of the variance in patent applications is explained by the independent variables in the model (educational attainment, sector, and year). The model is a very good fit for the data. Almost all the variation in the outcome variable (patent applications) is being explained by the predictors we have included.
Moreover, since R-squared and Adjusted R-squared are the same, this suggests that you are not overfitting the model. It means that the model’s explanatory power is due to the actual relationship between the independent variables and the dependent variable, rather than just adding more predictors for the sake of increasing the R-squared.

```{r}
#| message: false
#| echo: false
# We check for multicollinearity
library(car)
vif(fe_model)
```

The GVIF and GVIF^(1/(2*Df)) values are all very close to 1, with only minor exceptions for sector and country, which have GVIF values slightly above 1. These small values suggest that multicollinearity is not a major concern in your model.The absence of large GVIF values (i.e., values much greater than 1) indicates that multicollinearity is not severe, and the regression coefficients should be reliable.The slight inflation observed for sector and country indicates minor correlations with other variables, but these are not likely to cause significant issues with model estimation.

### Differences between region (CEE and WE)

We will create two groups of countries to compare their innovation
dynamics based on a study by Stojkoski et al. (2021), titled
"Differences in innovation relationships between Central and Eastern
Europe and Western Europe: Evidence from CIS 2014".

To replicate this approach and explore whether there's differences in
the context of patent applications, we will group the countries as
follows:

Central and Eastern Europe (CEE): This group includes countries such as
Bulgaria (BG), Croatia (HR), Hungary(HU), Romania(RO), and Slovakia(SK).
Western Europe (WE): This group consists of Greece(EL), Spain(ES),
Norway(NO), and Portugal(PT).

```{r}
#| message: false
#| echo: false
vet <- combined_data
# Prepare vet data
vet <- vet %>%
  mutate(
    country_group = case_when(
      country %in% c("BG", "HR", "HU", "RO", "SK") ~ "CEE",
      country %in% c("EL", "ES", "NO", "PT") ~ "WE",
      TRUE ~ "Other"  # To handle any other countries
    ),
    # Convert categorical variables to factors
    educational_attainment = as.factor(educational_attainment),
    sector = as.factor(sector),
    year = as.factor(year)
  )
```


```{r}
#| message: false
#| echo: false
# Recode country codes
conflicts_prefer(dplyr::recode)
vet$country <- recode(
  vet$country,
  "BG" = "BGR",
  "HR" = "HRV",
  "HU" = "HUN",
  "RO" = "ROU",
  "SK" = "SVK",
  "EL" = "GRC",
  "ES" = "ESP",
  "NO" = "NOR",
  "PT" = "PRT"
)
```


```{r}
#| message: false
#| echo: false
# Load libraries and get European map data
library(sf)
library(rnaturalearth)
library(ggplot2)

world <- ne_countries(scale = "medium", returnclass = "sf")
europe <- world[world$region_un == "Europe", ]
```


```{r}
#| message: false
#| echo: false
# Merge map data with vet data
europe_merged <- merge(europe, vet, by.x = "sov_a3", by.y = "country", all.x = TRUE)
```


```{r}
#| message: false
#| echo: false
# Plot the map
map_europe <- ggplot(data = europe_merged) +
  geom_sf(aes(fill = patents.x)) +
  theme_minimal() +
  labs(
    title = "European Countries by Group",
    fill = "Group"
  )
print(map_europe)
```

```{r}
#| message: false
#| echo: false
library(leaflet)
library(sf)

# Create the leaflet map
interactive_map <- leaflet(data = europe_merged) %>%
  addProviderTiles("CartoDB.Positron") %>%  # Add basemap
  addPolygons(
    fillColor = ~viridis::viridis(1)[1],  # Use a color palette
    fillOpacity = 0.7,
    color = "black",  # Border color
    weight = 1,
    popup = ~paste("Country:", name, "<br>Group:", patents.x)
  )

# Show the interactive map
print(interactive_map)

```

We observe notable differences in patent applications between the two groups on the map. Specifically, Western European countries tend to have higher patent application rates compared to their counterparts in Central and Eastern Europe. To better understand these disparities, we will conduct a regression analysis to further explore the differences.


#### Regression

```{r}
#| message: false
#| echo: false
# Run separate regressions for each group
western_reg <- lm(patents.x ~ educational_attainment + sector + year,
                 data = filter(vet, country_group == "WE"))

eastern_reg <- lm(patents.x ~ educational_attainment + sector + year,
                 data = filter(vet, country_group == "CEE"))
```


```{r}
#| message: false
#| echo: false
# Get robust standard errors for both models
western_robust <- coeftest(western_reg, vcov = vcovHC(western_reg, type = "HC1"))
eastern_robust <- coeftest(eastern_reg, vcov = vcovHC(eastern_reg, type = "HC1"))
```


```{r}
#| message: false
#| echo: false
library(dplyr)
library(ggplot2)
library(broom)
library(sandwich)
library(lmtest)
# Create comparison table
western_results <- tidy(western_robust) %>% mutate(group = "WE")
eastern_results <- tidy(eastern_robust) %>% mutate(group = "CEE")

comparison_table <- bind_rows(western_results, eastern_results) %>%
  arrange(term, group)
```


```{r}
#| message: false
#| echo: false
# Calculate summary statistics
summary_stats <- vet %>%
  group_by(country_group) %>%
  summarise(
    mean_patents = mean(patents.x, na.rm = TRUE),
    sd_patents = sd(patents.x, na.rm = TRUE),
    n_obs = n(),
    r_squared_western = summary(western_reg)$r.squared,
    r_squared_eastern = summary(eastern_reg)$r.squared
  )
```


```{r}
#| message: false
#| echo: false
# Visualize predictions by group
vet <- vet %>%
  mutate(
    predicted_patents_western = predict(western_reg, newdata = .),
    predicted_patents_eastern = predict(eastern_reg, newdata = .)
  )

# Create scatter plot with regression lines
ggplot(vet, aes(x = as.numeric(year), y = patents.x, color = country_group)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE) +
  facet_wrap(~country_group) +
  theme_minimal() +
  labs(
    title = "Patent Applications by Country Group",
    x = "Year",
    y = "Number of Patents",
    color = "Country Group"
  )
```


```{r}
# Print results
print("Western Countries Regression Results:")
print(western_robust)
print("\nEastern Countries Regression Results:")
print(eastern_robust)
print("\nSummary Statistics:")
print(summary_stats)
```

We observe that, mean, sd, the R-squared of western is lower than the one of the eastern so the eastern countries patent application variation are more expalined by the variable sector and educational attainment (our model). However, there's 495 more observation in the central and eastern group than in the western group, this have effect on the R-squared, indeed, The group with more observations will likely have a more stable and robust R-squared value, while the smaller group might produce a less reliable one. So we need additional computation to conclude.
We use a adjusted R-squarded becuase it's less sensitive to sample size differences and gives a more accurate measure of how well the model fits the data when comparing groups with unequal sample sizes.

```{r}
# Get Adjusted R-squared for Western group
adjusted_r_squared_western <- summary(western_reg)$adj.r.squared

# Get Adjusted R-squared for Eastern group
adjusted_r_squared_eastern <- summary(eastern_reg)$adj.r.squared

# Print Adjusted R-squared values
print(paste("Adjusted R-squared for Western group:", round(adjusted_r_squared_western, 4)))
print(paste("Adjusted R-squared for Eastern group:", round(adjusted_r_squared_eastern, 4)))

```
Both groups have low Adjusted R-squared values, which suggests that the independent variables included in the model (educational attainment, sector, and year) do not explain much of the variance in patent applications.
1.1% of the variance in patent applications in Western countries is explained by the variables in your model (educational attainment, sector, and year). For central and eastern countries it slighlty higher approximately 3.57% of the variance in patent applications in Eastern countries is explained by the same model.
This may be due to the fact that patent applications are influenced by many other factors, such as policy environments, cultural factors, economic conditions, or innovation ecosystems, which are not captured by this model.

Comparison between groups: While the Eastern group has a slightly higher Adjusted R-squared than the Western group, both values are quite low, so the difference is not substantial. It suggests that the independent variables explain similarly small portions of the variance in both groups, and the model might not be a strong predictor for either group.

```{r}
#| message: false
#| echo: false
# Chow test for structural break between groups
# Combine the data and run pooled regression
pooled_reg <- lm(patents.x ~ educational_attainment + sector + year,
                 data = vet)

# Calculate F-statistic for Chow test
n1 <- sum(vet$country_group == "Western")
n2 <- sum(vet$country_group == "Eastern")
k <- length(coef(pooled_reg))
rss_pooled <- sum(residuals(pooled_reg)^2)
rss_western <- sum(residuals(western_reg)^2)
rss_eastern <- sum(residuals(eastern_reg)^2)

f_stat <- ((rss_pooled - (rss_western + rss_eastern)) / k) / 
          ((rss_western + rss_eastern) / (n1 + n2 - 2*k))

p_value <- 1 - pf(f_stat, k, n1 + n2 - 2*k)

# Print Chow test results
print("\nChow Test Results:")
print(paste("F-statistic:", round(f_stat, 4)))
print(paste("p-value:", round(p_value, 4)))
```

### Data cleaning and merging 2

## Cleaning each dataset separetaly

```{r}
#| message: false
#| echo: false
# Since many of the columns for the years in the data set are considered as 
# character values we have to arrange it 

patent2 <- patent |>
  mutate(across(starts_with("20"), ~ as.numeric(.))) 

education2 <- education |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) 

key_indicator2 <- key_indicator |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) 
```

## Merge them

```{r}
#| message: false
#| echo: false
# 2. Join datasets
combined_data2 <- education2 %>% 
  left_join(key_indicator2, by = "geo", relationship = "many-to-many") %>%
  left_join(patent, by = "geo", relationship = "many-to-many")
```

```{r}
#| message: false
#| echo: false
combined_data2 <- combined_data2 %>%
  select(where(~ !all(is.na(.))))
```

# IV- conclusion
