---
title: "R-project-patent"
format:
  html: 
    code-fold: true
  pdf: default
editor: 
  markdown: 
    wrap: 72
---

GitHub Repository <https://github.com/brl-noe/R-project-patent.git>

#  I- Research question presentation

  In early September, Mario Draghi revealed his plan to make the European
Union more competitive. A key part of his plan is to invest billions in
innovation. Patent applications serve as a proxy for innovation. A
patent is an exclusive right granted for an invention, while a patent
application refers to the legal and administrative process of requesting
the issuance of a patent. This includes the content of the invention's
description and claims, along with the procedural paperwork involved.
Therefore, it seems relevant to explore what factors influence the
phenomenon of patent applications across European Union countries. Our
research question is: **What factors influence patent applications
across European Union countries? A longitudinal analysis of education,
innovation dynamics, and socioeconomic indicators.**

This study focuses on the role of education, innovation-related factors,
and socioeconomic variables in explaining differences in patent activity
across EU countries. We aim to determine whether higher educational
attainment correlates with more patents and how economic factors, such
as GDP, income inequality, and unemployment, influence this
relationship.

Moreover, our study will employ a longitudinal analysis, allowing us to
examine trends in patent applications and the evolution of the
relationship between patent activity, education, and socioeconomic
factors across European Union countries over time.We hypothesize that
higher economic development is positively correlated with higher
educational attainment and, in turn, with increased patent applications.
In 2023, countries with the highest number of patent applications were
also among the largest global economies (e.g., China ranked 1st, and the
USA ranked 2nd), suggesting a link between economic strength and
innovation output. This pattern implies that economic resources may
facilitate investments in education and research, which are crucial
drivers of technological advancement. Moreover, a World Bank article
published in 2023 stated: *"Today, there is agreement that education,
independent of innate ability, helps spur innovation and technology, and
it contributes to productivity and economic growth."* This further
supports the idea that education plays a critical role in fostering
innovation, reinforcing the need to investigate whether a similar
relationship exists within European Union countries.

Our findings could help European policymakers allocate resources more
effectively, ensuring that the billions of euros invested in innovation
contribute to the European Union's goal of remaining globally
competitive. For instance, if we find that higher educational attainment
correlates with higher patent applications, we would recommend that
policymakers prioritize investments in education. This would potentially
be more impactful and cost-effective than investing in other areas of
the R&D process, such as infrastructure.

# II- Data sets descriptions
 
  For our analysis, we will use tree different datasets all coming from
the Eurostat public database:
Population by Educational Attainment Level, Sex, and Age:
<https://ec.europa.eu/eurostat/web/products-datasets/-/edat_lfse_03>
Patent Applications to the European Patent Office by Applicants' /
Inventors' Country of Residence:
<https://ec.europa.eu/eurostat/web/products-datasets/-/sdg_09_40> Key
Indicators - Annual Data:
<https://ec.europa.eu/eurostat/web/products-datasets/-/nasa_10_ki>

The common key indicator of the 3 datasets is `geo` that refers to the name of the country. This variable will be useful to associate datasets with each other. Another common variable to the 3 datasets is `unit` (percentage or a row value of the observed variable).

Then, the first dataset called patent has as observed value the number
of requests for patent protection of an invention filed with the
European Patent Office (EPO) regardless of whether they are granted or
not. Here, we see a limit in our analysis coming from the last fact.
Indeed, later on the analysis, we will proxy the level of innovation in
a country based on this observed value of application for patent however
we don't actually know if the patent is granted or not, we mainly know
which country (`geo`) applied for how many a patent each year.

The second dataset called education contains mainly contains the
variable `isced11`. `isced11` is an indication of the the educational
attainment level of an individual with each individual being in between
15 and 64 years old (variable `age`). The educational attainment level
corresponds to the highest ISCED (International Standard Classification
of Education) level successfully completed, the successful completion of
an education programme being validated by a recognised qualification, in
other word a qualification officially recognised by the relevant
national education authorities or recognised as equivalent to another
qualification of formal education. The ISCED for 2011 are as following:

Level 0 – Less than primary education Level 1 – Primary education Level
2 – Lower secondary education Level 3 – Upper secondary education Level
4 – Post-secondary non-tertiary education Level 5 – Short-cycle tertiary
education Level 6 – Bachelor’s or equivalent level Level 7 – Master’s or
equivalent level Level 8 – Doctoral or equivalent level

The third dataset called key_indicator encompass non-financial accounts
that provide a description of the different stages of the economic
process (variable `na_item`): production, generation of income,
distribution of income, redistribution of income, use of income and
non-financial accumulation. These stages are estimated in percentage for
different sectors and agents of the economy of the country.

## Basics informations about the databases

```{r}
## Loading the library
#| message: false
#| echo: false
library(conflicted)
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(tidyverse)
library(plm)
library(AER)
library(sandwich)
theme_set(theme_bw())
conflicted::conflict_prefer("filter", "dplyr")
```

```{r}
## Loading the data
#| message: false
#| echo: false
here::i_am("R-project-patent.Rproj")
```

```{r}
#| message: false
#| echo: false
## Loading patent data
patent <- vroom(here("patent.tsv"))

## Loading key indicator data
key_indicator <- vroom(here("key_indicator.tsv"))

## Loading education data
education <- vroom(here("education.tsv"))
```

|                   | Patent           |
|-------------------|------------------|
| Number of rows    | `r NROW(patent)` |
| Number of columns | `r NCOL(patent)` |

|                   | Key Indicator           |
|-------------------|-------------------------|
| Number of rows    | `r NROW(key_indicator)` |
| Number of columns | `r NCOL(key_indicator)` |

|                   | Education           |
|-------------------|---------------------|
| Number of rows    | `r NROW(education)` |
| Number of columns | `r NCOL(education)` |


# III- Data analysis

```{r}
#| echo: false
# Data cleaning steps
# 1. Separate columns
education <- education %>%
  separate(col = "freq,sex,age,unit,isced11,geo\\TIME_PERIOD", 
           into = c("freq", "sex", "age", "unit", "isced11", "geo"),
           sep = ",")
patent <- patent %>%
  separate(col = "freq,coop_ptn,unit,geo\\TIME_PERIOD", 
           into = c("freq", "coop_ptn", "unit", "geo"),
           sep = ",")
key_indicator <- key_indicator %>%
  separate(col = "freq,unit,na_item,sector,geo\\TIME_PERIOD", 
           into = c("freq", "unit", "na_item", "sector", "geo"),
           sep = ",")
```


## Description of the data joining, cleaning, etc. for patent

```{r}
patent |> summarise(across(starts_with("20"), class))
```
Here we find a problem in the patent dataset. Indeed, some Years have values in
numeric format whereas some others are in the characters format 

```{r}
patent <- patent |>
  mutate(across(starts_with("20"), ~ as.numeric(as.character(.))))  
```
Mutate() will let us modify existing columns starting with "20" and the function
across() will spread to all the functions staring with "20" the change from
numeric values to characters. 


We first create a column with all the years in it and each country's
values for every year:
```{r}
patent_long <- patent |>
  pivot_longer(cols = starts_with("20"), names_to = "Years", values_to = "Value")
print(patent_long)
```


```{r}
patent_summary <- patent_long |>
  filter(geo != "EU27_2020") |>
  group_by(Years) |>
    filter(!is.na(Value)) |>
    mutate(total_value = sum(Value))
print(patent_summary)
```

Here we add an additional filter to remove the mean of patent in every country
in the euro zone (EU27_2020). We need to do that because otherwise some 
countries in Europe will be counted two times (counted for themselves and inside
the aggregate EU27_2020). 

```{r}
patent_summary |>
ggplot(aes(x=Years, y=total_value)) +
  geom_point()
```

We see a global trend of increasing the total number of patent each year in 
the european countries. 

```{r}
patent_EU27 <- patent_long |>
  filter(geo == "EU27_2020") |>
  group_by(Years) |>
    filter(!is.na(Value)) |>
    mutate(total_value = sum(Value))
print(patent_EU27)
```


```{r}
patent_EU27 |>
 ggplot(aes(x=Years, y=total_value)) +
  geom_point() 
```

Similarely as before, if we only consider the 27 countries of the euro zone,
we notice the same trend in the global number of patent.

## Description of the data joining, cleaning, etc. for key indicator

```{r}
key_indicator |>
   summarise(across(matches("^20|^19"), class))
```

We observe again that many of the columns contains characters that we have to 
convert to numeric values. 

```{r}
key_indicator2 <- key_indicator |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) |> 
  print(key_indicator2)
```



Here we have a big problem because each sector has its own na_item that 
correspond to the method of calculation. In other words, in each countries the 
method to evaluate the percentage of each sector in the economy of the country 
is different. This fact limits the rigor of the approach for any analysis based 
on sectors.

```{r}
key_indicator2 |>
  filter(geo == "FR") |>
  ggplot(aes())
```










```{r}
key_long <- key_indicator |>
  pivot_longer(cols = starts_with("20"), names_to = "Years", values_to = "Value")
print(key_long)
```

```{r}
key_long |>
  filter(geo == "FR") |>
  filter(sector == "S11") |>
  ggplot(aes(x = Years, y= Value, fill= sector)) +
  geom_bar()
```

## Description of the data joining, cleaning,ect. for education

```{r}
education |>
   summarise(across(matches("^20|^19"), class))

```

```{r}
education2 <- education |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) |> 
  print(education2)
```

```{r}
education_long <- education |>
  pivot_longer(cols = starts_with("20"), names_to = "Years", values_to = "Value")
print(education_long)
```

# Patent and education application 

```{r}
prepare_data <- function(education_long, patent_long, start_year = 2012, end_year = 2022) {
  # Clean education data
  clean_education <- education_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years),
           # Map `isced11` to educational attainment levels
           educational_attainment = case_when(
             isced11 == "ED0-2" ~ "Lower secondary education",
             isced11 == "ED3_4" ~ "Upper secondary education and Doctoral",
             isced11 == "ED3_4GEN" ~ "Upper secondary (general)",
             isced11 == "ED3_4VOC" ~ "Upper secondary (vocational)",
             isced11 == "ED5-8" ~ "Tertiary to Doctoral",
             TRUE ~ NA_character_  # Assign NA for unexpected values
           )) %>%
    # Filter years to reduce data volume
    filter(year >= start_year, year <= end_year) %>%
    # Remove rows with NA in key variables
    filter(!is.na(educational_attainment), !is.na(geo)) %>%
    # Optional: aggregate data (count or percentage representation)
    group_by(geo, year, educational_attainment) %>%
    summarize(educational_attainment_count = n(), .groups = "drop")

  # Clean patent data
  clean_patent <- patent_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years)) %>%
    filter(year >= start_year, year <= end_year) %>%
    filter(!is.na(Value), !is.na(geo)) %>%
    group_by(geo, year) %>%
    summarize(patents = sum(Value, na.rm = TRUE), .groups = "drop")

  # Merge datasets
  merged_data <- inner_join(clean_education, clean_patent, by = c("geo", "year"))
  return(merged_data)
}
```

```{r}
# Ensure merged_data is created by running the function
merged_data <- prepare_data(education_long, patent_long)
```

```{r}
filtered_data <- merged_data %>%
  filter(geo %in% c("FR", "DE", "IT"))  # Replace with desired country codes

plot_education_patents <- ggplot(filtered_data, 
         aes(x = year, 
             y = patents, 
             color = educational_attainment, 
             group = interaction(geo, educational_attainment))) +
    geom_line(size = 1, alpha = 0.7) +
    facet_wrap(~ geo, scales = "free_y") +
    scale_color_viridis_d(name = "Education Level") +
    theme_minimal() +
    labs(x = "Year",
         y = "Number of Patents",
         title = "Patent Activity by Education Level and Country") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          strip.text = element_text(size = 10))
print(plot_education_patents)
```

```{r}
filtered_data <- merged_data %>%
  filter(year == 2022, geo %in% c("FR", "DE", "IT", "EU27_2020"))

plot_education_patents2 <- ggplot(filtered_data, 
         aes(x = geo, 
             y = patents, 
             fill = educational_attainment)) +
    geom_bar(stat = "identity", position = "dodge") +
    scale_fill_viridis_d(name = "Education Level") +
    theme_minimal() +
    labs(x = "Country",
         y = "Number of Patents",
         title = "Patent Activity by Education Level and Country (2022)") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          axis.text.x = element_text(angle = 45, hjust = 1))
print(plot_education_patents2)
```

# Patent and key indicator application 

```{r}
prepare_data2 <- function(key_long, patent_long, start_year = 2012, end_year = 2022) {
  # Clean education data
  clean_key <- key_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years),
           # Map `sector` to their respective labels
           sector = case_when(
            sector == "S1" ~ "Total economy",
            sector == "S11" ~ "Non-financial corporations",
            sector == "S11_S12" ~ "Non-financial/financial corporate sectors",
            sector == "S13" ~ "general government",
            sector == "S14" ~ "Households",
            sector == "S14_S15" ~ "Households and NPISHs",
             TRUE ~ NA_character_  # Assign NA for unexpected values
           )) %>%
    # Filter years to reduce data volume
    filter(year >= start_year, year <= end_year) %>%
    # Remove rows with NA in key variables
    filter(!is.na(sector), !is.na(geo)) %>%
    # Optional: aggregate data (count or percentage representation)
    group_by(geo, year, sector) %>%
    summarize(sector = n(), .groups = "drop")

  # Clean patent data
  clean_key <- key_long %>%
    # Ensure `year` is numeric
    mutate(year = as.numeric(Years)) %>%
    filter(year >= start_year, year <= end_year) %>%
    filter(!is.na(Value), !is.na(geo)) %>%
    group_by(geo, year) %>%
    summarize(patents = sum(Value, na.rm = TRUE), .groups = "drop")

  # Merge datasets
  merged_data2 <- inner_join(clean_key, clean_patent, by = c("geo", "year"))
  return(merged_data2)
}
```

```{r}
# Ensure merged_data is created by running the function
merged_data2 <- prepare_data2(key_long, patent_long)
```

```{r}
filtered_data2 <- merged_data2 %>%
  filter(geo %in% c("FR", "DE", "IT"))  # Replace with desired country codes

plot_key_patents <- ggplot(filtered_data, 
         aes(x = year, 
             y = patents, 
             color = sector, 
             group = interaction(geo, sector))) +
    geom_line(size = 1, alpha = 0.7) +
    facet_wrap(~ geo, scales = "free_y") +
    scale_color_viridis_d(name = "Sector") +
    theme_minimal() +
    labs(x = "Year",
         y = "Number of Patents",
         title = "Patent Activity by Sector and Country") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          strip.text = element_text(size = 10))
print(plot_key_patents)
```

```{r}
filtered_data3 <- merged_data2 %>%
  filter(year == 2022, geo %in% c("FR", "DE", "IT", "EU27_2020"))

plot_key_patents3 <- ggplot(filtered_data, 
         aes(x = geo, 
             y = patents, 
             fill = sector)) +
    geom_bar(stat = "identity", position = "dodge") +
    scale_fill_viridis_d(name = "Education Level") +
    theme_minimal() +
    labs(x = "Country",
         y = "Number of Patents",
         title = "Patent Activity by Sector and Country (2022)") +
    theme(legend.position = "right",
          plot.title = element_text(size = 14, face = "bold"),
          axis.text.x = element_text(angle = 45, hjust = 1))
print(plot_key_patents3)
```

## Description of the data joining, cleaning, etc. for combined data

```{r}
education_long_agg <- education_long %>%
  group_by(geo, Years) %>%
  summarise()

patent_long_agg <- patent_long %>%
  group_by(geo, Years) %>%
  summarise()

key_long_agg <- key_long %>%
  group_by(geo, Years) %>%
  summarise()

combined_data <- education_long_agg %>%
  inner_join(patent_long_agg, by = c("geo", "Years")) %>%
  inner_join(key_long_agg, by = c("geo", "Years"))

```


```{r}
#| echo: false
# 3. Clean and prepare data
combined_data <- combined_data %>%
  rename(
    country = geo,
    educational_attainment = isced11
)
```


```{r}
#| echo: false
combined_data <- combined_data %>%
  select(-matches("\\.y$")) %>%  # Remove columns ending with ".y"
  mutate(across(matches("^\\d{4}"), ~ {
    value <- ifelse(. == "u", NA, .)  # Replace "u" with NA
    value <- str_remove(value, "[bx]$")  # Remove trailing "b" or "x"
    as.numeric(value)  # Convert to numeric
  })) %>%
distinct() %>%
  # Recode sectors
  mutate(sector = case_when(
    sector == "S1" ~ "Total economy",
    sector == "S11" ~ "Non-financial corporations",
    sector == "S11_S12" ~ "Non-financial/financial corporate sectors",
    sector == "S13" ~ "general government",
    sector == "S14" ~ "Households",
    sector == "S14_S15" ~ "Households and NPISHs",
    TRUE ~ sector
  )) %>%
  # Recode education
  mutate(educational_attainment = case_when(
    educational_attainment == "ED0-2" ~ "Lower secondary education",
    educational_attainment == "ED3_4" ~ "Upper secondary education and Doctoral",
    educational_attainment == "ED3_4GEN" ~ "Upper secondary (general)",
    educational_attainment == "ED3_4VOC" ~ "Upper secondary (vocational)",
    educational_attainment == "ED5-8" ~ "Tertiary to Doctoral",
    TRUE ~ educational_attainment
  )) 
```

```{r}
# First, let's identify which columns to keep
combined_data %>%
  names() %>%
  print()

# Then create a focused dataset
focused_data <- combined_data %>%
  # Select only relevant columns
  select(
    country,
    educational_attainment,
    sector,
    coop_ptn,
    matches("^20(1[2-9]|2[0-2])") # This keeps years 2013-2023
  ) %>%
  # Keep only the sectors and education levels relevant to patent analysis
  filter(
    sector %in% c("Total economy", "Non-financial corporations"),
    !is.na(coop_ptn)
  )

# Check the dimensions of our new dataset
dim(focused_data)
```

## Regression

### Panel regression & panel regression with lagged effect

```{r}
# 4. Prepare for regression
panel_data <- combined_data %>%
  # Convert to long format
  pivot_longer(
    cols = matches("^\\d{4}$"),
      names_to = "year",
      values_to = "value"
  ) %>%
  # Impute missing values
  mutate(
    patent_count = as.numeric(coop_ptn),
    patent_count = ifelse(is.na(patent_count), 0, patent_count),  # Example: Replace with 0
    value = ifelse(is.na(value), mean(value, na.rm = TRUE), value)  # Replace with mean
  )
  # Convert year to numeric
  mutate(year = as.numeric(year))
```


```{r}
# 5. Run panel regression
# We delete the duplicate
panel_data <- panel_data[!duplicated(panel_data[c("country", "year")]), ]
# We create pdata
pdata <- pdata.frame(panel_data, index = c("country", "year"))

panel_model <- plm(patent_count ~ educational_attainment + sector + value,
                  data = pdata,
                  index = c("country", "year"),
                  model = "within",
                  effect = "twoways")
```


```{r}
# 6. Get robust standard errors
coeftest(panel_model, vcov = vcovHC(panel_model, type = "HC1"))
```


```{r}
# 7. Additional model with lagged effects
panel_model_lagged <- plm(patent_count ~ lag(value, 1) + educational_attainment + sector,
                         data = panel_data,
                         index = c("country", "year"),
                         model = "within",
                         effect = "twoways")
```


```{r}
# Summary statistics
summary(panel_model)
summary(panel_model_lagged)
```

```{r}
# We evaluate the residuals
plot(panel_model$residuals)
```

```{r}
# We check for multicollinearity
library(car)
vif(panel_model)
```

### Differences between region (CEE ans WE)

We will create two groups of countries to compare their innovation dynamics based on a study by Stojkoski et al. (2021), titled "Differences in innovation relationships between Central and Eastern Europe and Western Europe: Evidence from CIS 2014". 

To replicate this approach and explore whether there's differences in the context of patent applications, we will group the countries as follows:

Central and Eastern Europe (CEE): This group includes countries such as Bulgaria (BG), Croatia (HR), Hungary(HU), Romania(RO), and Slovakia(SK).
Western Europe (WE): This group consists of Greece(EL), Spain(ES), Norway(NO), and Portugal(PT).

```{r}
vet <- combined_data

# Define country groups based on region
vet <- vet %>%
  mutate(country_group = case_when(
    country %in% c("BG", "HR", "HU", "RO", "SK") ~ "CEE",
    country %in% c("EL", "ES", "NO", "PT") ~ "WE",
    TRUE ~ "Other"  # To handle any other countries
  ))

```

```{r}
library(rdrobust)

# Run the RDD with the country group as the treatment indicator
m <- rdrobust(vet$patent_count, as.numeric(vet$country_group == "Western"), c = 0)

# Summarize results
summary(m)

# Plot the RDD with a cutoff at 0 (i.e., Western countries = 1, Eastern countries = 0)
rdplot(vet$patent_count, as.numeric(vet$country_group == "Western"))

```

```{r}

# Fit a linear model with interaction terms for country group and other predictors
mw <- lm(patent_count ~ educational_attainment * country_group +
        sector * country_group + 
        age + sex, data = vet)

# Output the model summary with robust standard errors
mwsummary(mw, stars = c('*' = .1, '**' = .05, '***' = .01), vcov = 'robust')

```

```{r}
# Group by country group and calculate average patents for each group
binned <- vet %>%
  group_by(country_group) %>%
  summarize(avg_patents = mean(patent_count))

# Plot the average patent applications for Western vs. Eastern countries
ggplot(binned, aes(x = country_group, y = avg_patents)) + 
  geom_bar(stat = "identity", fill = "skyblue") +
  theme_minimal() +
  labs(title = "Average Patent Applications by Country Group", 
       x = "Country Group", y = "Average Patent Applications")
```

### Data cleaning and merging 2

## Cleaning each dataset separetaly

```{r}
# Since many of the columns for the years in the data set are considered as 
# character values we have to arrange it 

patent2 <- patent |>
  mutate(across(starts_with("20"), ~ as.numeric(.))) 

education2 <- education |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) 

key_indicator2 <- key_indicator |>
  mutate(across(matches("^20|^19"), ~ as.numeric(.))) 
```

## Merge them

```{r}
#| echo: false
# 2. Join datasets
combined_data2 <- education2 %>% 
  left_join(key_indicator2, by = "geo", relationship = "many-to-many") %>%
  left_join(patent, by = "geo", relationship = "many-to-many")
```

```{r}
combined_data2 <- combined_data2 %>%
  select(where(~ !all(is.na(.))))
```

# IV- conclusion